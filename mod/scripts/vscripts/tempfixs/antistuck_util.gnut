global function FindNearestSafePos_Nessie
global function PlayerPosInSolid_Nessie

vector function FindNearestSafePos_Nessie(entity player, vector targetPos, int severity)
{
    if(severity >= 250)
    {
        print("[ANTI-STUCK] Too many times tried!")
        SendHudMessage(player, "卡在了过于刁钻的位置无法修正! \n已移动至地图高空", -1, -0.35, 255, 255, 100, 255, 0, 5, 0)
       	return < player.GetOrigin().x,player.GetOrigin().y,4000 >
    }

    if( !PlayerPosInSolid_Nessie( player, < targetPos.x, targetPos.y+severity, targetPos.z > ) )
        return < targetPos.x, targetPos.y+severity, targetPos.z >

    if( !PlayerPosInSolid_Nessie( player, < targetPos.x, targetPos.y-severity, targetPos.z > ) )
        return < targetPos.x, targetPos.y-severity, targetPos.z >
 
    if( !PlayerPosInSolid_Nessie( player, < targetPos.x+severity, targetPos.y, targetPos.z > ) )
        return < targetPos.x+severity, targetPos.y, targetPos.z >

    if( !PlayerPosInSolid_Nessie( player, < targetPos.x-severity, targetPos.y, targetPos.z > ) )
        return < targetPos.x-severity, targetPos.y, targetPos.z >

    return FindNearestSafePos_Nessie( player, targetPos, severity+5 )
}

bool function PlayerPosInSolid_Nessie( entity player, vector targetPos )
{
    int solidMask = TRACE_MASK_PLAYERSOLID
    vector mins
    vector maxs
    int collisionGroup = TRACE_COLLISION_GROUP_PLAYER
    array<entity> ignoreEnts = []
    ignoreEnts.append( player ) //in case we want to check player's current pos
    TraceResults result

    mins = player.GetPlayerMins()
    maxs = player.GetPlayerMaxs()
    result = TraceHull( targetPos, targetPos + Vector( 0, 0, 1), mins, maxs, ignoreEnts, solidMask, collisionGroup )
    if ( result.startSolid )
        return true

    return false

}